<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Go on Manuel Ohlendorf</title><link>https://manuel-ohlendorf.de/tags/go/</link><description>Recent content in Go on Manuel Ohlendorf</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â© 2017 Manuel Ohlendorf. All rights reserved.</copyright><lastBuildDate>Tue, 29 Sep 2015 09:34:00 +0200</lastBuildDate><atom:link href="https://manuel-ohlendorf.de/tags/go/index.xml" rel="self" type="application/rss+xml"/><item><title>The crazy date/time formatting in Go</title><link>https://manuel-ohlendorf.de/posts/008_go_time_format/</link><pubDate>Tue, 29 Sep 2015 09:34:00 +0200</pubDate><guid>https://manuel-ohlendorf.de/posts/008_go_time_format/</guid><description>&lt;p>Formatting and parsing date/time strings is a very common use-case in programming. A lot of the programming languages I worked with take the same approach for that: Using the Unicode time pattern syntax &lt;a href="http://www.unicode.org/reports/tr35/#Date_Format_Patterns">UTS #35&lt;/a>. For me it is always hard to remember the details, especially when it comes to the upper and lower case codes.&lt;/p></description></item></channel></rss>